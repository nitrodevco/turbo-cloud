// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Turbo.Database.Context;

#nullable disable

namespace Turbo.Main.Migrations
{
    [DbContext(typeof(TurboDbContext))]
    partial class TurboDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Turbo.Database.Entities.Catalog.CatalogOfferEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanBundle")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_bundle");

                    b.Property<bool>("CanGift")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_gift");

                    b.Property<int>("CatalogPageEntityId")
                        .HasColumnType("int")
                        .HasColumnName("page_id");

                    b.Property<int>("ClubLevel")
                        .HasColumnType("int")
                        .HasColumnName("club_level");

                    b.Property<int>("CostCredits")
                        .HasColumnType("int")
                        .HasColumnName("cost_credits");

                    b.Property<int>("CostCurrency")
                        .HasColumnType("int")
                        .HasColumnName("cost_currency");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<int?>("CurrencyType")
                        .HasColumnType("int")
                        .HasColumnName("currency_type");

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<string>("LocalizationId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("localization_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.Property<bool>("Visible")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("visible");

                    b.HasKey("Id");

                    b.HasIndex("CatalogPageEntityId");

                    b.ToTable("catalog_offers");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Catalog.CatalogPageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("Icon")
                        .HasColumnType("int")
                        .HasColumnName("icon");

                    b.PrimitiveCollection<string>("ImageData")
                        .HasColumnType("json")
                        .HasColumnName("image_data");

                    b.Property<string>("Layout")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("layout");

                    b.Property<string>("Localization")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("localization");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentEntityId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.PrimitiveCollection<string>("TextData")
                        .HasColumnType("json")
                        .HasColumnName("text_data");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.Property<bool>("Visible")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("visible");

                    b.HasKey("Id");

                    b.HasIndex("ParentEntityId");

                    b.ToTable("catalog_pages");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Catalog.CatalogProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CatalogOfferEntityId")
                        .HasColumnType("int")
                        .HasColumnName("offer_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<string>("ExtraParam")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_param");

                    b.Property<int?>("FurnitureDefinitionEntityId")
                        .HasColumnType("int")
                        .HasColumnName("definition_id");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("product_type");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int>("UniqueRemaining")
                        .HasColumnType("int")
                        .HasColumnName("unique_remaining");

                    b.Property<int>("UniqueSize")
                        .HasColumnType("int")
                        .HasColumnName("unique_size");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("CatalogOfferEntityId");

                    b.HasIndex("FurnitureDefinitionEntityId");

                    b.ToTable("catalog_products");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Furniture.FurnitureDefinitionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanGroup")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_group");

                    b.Property<bool>("CanLay")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_lay");

                    b.Property<bool>("CanRecycle")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_recycle");

                    b.Property<bool>("CanSell")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_sell");

                    b.Property<bool>("CanSit")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_sit");

                    b.Property<bool>("CanStack")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_stack");

                    b.Property<bool>("CanTrade")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_trade");

                    b.Property<bool>("CanWalk")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_walk");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<string>("ExtraData")
                        .HasColumnType("longtext")
                        .HasColumnName("extra_data");

                    b.Property<string>("Logic")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("logic");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("product_name");

                    b.Property<string>("PublicName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("public_name");

                    b.Property<int>("SpriteId")
                        .HasColumnType("int")
                        .HasColumnName("sprite_id");

                    b.Property<int>("TotalStates")
                        .HasColumnType("int")
                        .HasColumnName("total_states");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.Property<int>("UsagePolicy")
                        .HasColumnType("int")
                        .HasColumnName("usage_policy");

                    b.Property<int>("X")
                        .HasColumnType("int")
                        .HasColumnName("x");

                    b.Property<int>("Y")
                        .HasColumnType("int")
                        .HasColumnName("y");

                    b.Property<double>("Z")
                        .HasColumnType("double(10,3)")
                        .HasColumnName("z");

                    b.HasKey("Id");

                    b.HasIndex("SpriteId", "Type")
                        .IsUnique();

                    b.ToTable("furniture_definitions");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Furniture.FurnitureEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("FurnitureDefinitionEntityId")
                        .HasColumnType("int")
                        .HasColumnName("definition_id");

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int?>("RoomEntityId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<int>("Rotation")
                        .HasColumnType("int")
                        .HasColumnName("direction");

                    b.Property<string>("StuffData")
                        .HasColumnType("longtext")
                        .HasColumnName("stuff_data");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.Property<int>("WallOffset")
                        .HasColumnType("int")
                        .HasColumnName("wall_offset");

                    b.Property<int>("X")
                        .HasColumnType("int")
                        .HasColumnName("x");

                    b.Property<int>("Y")
                        .HasColumnType("int")
                        .HasColumnName("y");

                    b.Property<double>("Z")
                        .HasColumnType("double(10,3)")
                        .HasColumnName("z");

                    b.HasKey("Id");

                    b.HasIndex("FurnitureDefinitionEntityId");

                    b.HasIndex("PlayerEntityId");

                    b.HasIndex("RoomEntityId");

                    b.ToTable("furniture");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Furniture.FurnitureTeleportLinkEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("FurnitureEntityOneId")
                        .HasColumnType("int")
                        .HasColumnName("furniture_one_id");

                    b.Property<int>("FurnitureEntityTwoId")
                        .HasColumnType("int")
                        .HasColumnName("furniture_two_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("FurnitureEntityOneId")
                        .IsUnique();

                    b.HasIndex("FurnitureEntityTwoId")
                        .IsUnique();

                    b.ToTable("furniture_teleport_links");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Messenger.MessengerCategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId", "Name")
                        .IsUnique();

                    b.ToTable("messenger_categories");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Messenger.MessengerFriendEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("FriendPlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("requested_id");

                    b.Property<int?>("MessengerCategoryEntityId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("RelationType")
                        .HasColumnType("int")
                        .HasColumnName("relation");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("FriendPlayerEntityId");

                    b.HasIndex("MessengerCategoryEntityId");

                    b.HasIndex("PlayerEntityId", "FriendPlayerEntityId")
                        .IsUnique();

                    b.ToTable("messenger_friends");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Messenger.MessengerRequestEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("RequestedPlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("requested_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("RequestedPlayerEntityId");

                    b.HasIndex("PlayerEntityId", "RequestedPlayerEntityId")
                        .IsUnique();

                    b.ToTable("messenger_requests");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Navigator.NavigatorEventCategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.Property<bool>("Visible")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("visible");

                    b.HasKey("Id");

                    b.ToTable("navigator_eventcats");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Navigator.NavigatorFlatCategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Automatic")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("automatic");

                    b.Property<string>("AutomaticCategory")
                        .HasColumnType("longtext")
                        .HasColumnName("automatic_category");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<string>("GlobalCategory")
                        .HasColumnType("longtext")
                        .HasColumnName("global_category");

                    b.Property<int>("MinRank")
                        .HasColumnType("int")
                        .HasColumnName("min_rank");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("OrderNum")
                        .HasColumnType("int")
                        .HasColumnName("order_num");

                    b.Property<bool>("StaffOnly")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("staff_only");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.Property<bool>("Visible")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("visible");

                    b.HasKey("Id");

                    b.ToTable("navigator_flatcats");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Navigator.NavigatorTopLevelContextEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("OrderNum")
                        .HasColumnType("int")
                        .HasColumnName("order_num");

                    b.Property<string>("SearchCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("search_code");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.Property<bool>("Visible")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("visible");

                    b.HasKey("Id");

                    b.HasIndex("SearchCode")
                        .IsUnique();

                    b.ToTable("navigator_top_level_contexts");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerBadgeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BadgeCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("badge_code");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int?>("SlotId")
                        .HasColumnType("int")
                        .HasColumnName("slot_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId", "BadgeCode")
                        .IsUnique();

                    b.ToTable("player_badges");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerChatStyleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientStyleId")
                        .HasColumnType("int")
                        .HasColumnName("client_style_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("ClientStyleId")
                        .IsUnique();

                    b.ToTable("player_chat_styles");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerChatStyleOwnedEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatStyleId")
                        .HasColumnType("int")
                        .HasColumnName("chat_style_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("ChatStyleId");

                    b.HasIndex("PlayerEntityId", "ChatStyleId")
                        .IsUnique();

                    b.ToTable("player_chat_styles_owned");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerCurrencyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId", "Type")
                        .IsUnique();

                    b.ToTable("player_currencies");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<string>("Figure")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("figure");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<string>("Motto")
                        .HasColumnType("longtext")
                        .HasColumnName("motto");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("PlayerPerks")
                        .HasColumnType("int")
                        .HasColumnName("perk_flags");

                    b.Property<int>("PlayerStatus")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("RoomChatStyleId")
                        .HasColumnType("int")
                        .HasColumnName("room_chat_style_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("players");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerFavouriteRoomsEntity", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("PlayerId", "RoomId");

                    b.HasIndex("RoomId");

                    b.HasIndex("PlayerId", "RoomId")
                        .IsUnique();

                    b.ToTable("player_favourite_rooms");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomBanEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime>("DateExpires")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_expires");

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomEntityId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId");

                    b.HasIndex("RoomEntityId", "PlayerEntityId")
                        .IsUnique();

                    b.ToTable("room_bans");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomChatlogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<string>("Message")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("message");

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomEntityId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<int?>("TargetPlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("target_player_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId");

                    b.HasIndex("RoomEntityId");

                    b.HasIndex("TargetPlayerEntityId");

                    b.ToTable("room_chatlogs");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllowEditing")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("allow_editing");

                    b.Property<bool>("AllowPets")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("allow_pets");

                    b.Property<bool>("AllowPetsEat")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("allow_pets_eat");

                    b.Property<bool>("AllowWalkThrough")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("allow_walk_through");

                    b.Property<int>("BanType")
                        .HasColumnType("int")
                        .HasColumnName("ban_type");

                    b.Property<int>("ChatDistance")
                        .HasColumnType("int")
                        .HasColumnName("chat_distance");

                    b.Property<int>("ChatModeType")
                        .HasColumnType("int")
                        .HasColumnName("chat_mode_type");

                    b.Property<int>("ChatProtectionType")
                        .HasColumnType("int")
                        .HasColumnName("chat_protection_type");

                    b.Property<int>("ChatSpeedType")
                        .HasColumnType("int")
                        .HasColumnName("chat_speed_type");

                    b.Property<int>("ChatWeightType")
                        .HasColumnType("int")
                        .HasColumnName("chat_weight_type");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<bool>("HideWalls")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("hide_walls");

                    b.Property<int>("KickType")
                        .HasColumnType("int")
                        .HasColumnName("kick_type");

                    b.Property<DateTime>("LastActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_active");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("LastActive"));

                    b.Property<int>("MuteType")
                        .HasColumnType("int")
                        .HasColumnName("mute_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int?>("NavigatorCategoryEntityId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<double>("PaintFloor")
                        .HasColumnType("double")
                        .HasColumnName("paint_floor");

                    b.Property<double>("PaintLandscape")
                        .HasColumnType("double")
                        .HasColumnName("paint_landscape");

                    b.Property<double>("PaintWall")
                        .HasColumnType("double")
                        .HasColumnName("paint_wall");

                    b.Property<string>("Password")
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomModelEntityId")
                        .HasColumnType("int")
                        .HasColumnName("model_id");

                    b.Property<int>("RoomState")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<int>("ThicknessFloor")
                        .HasColumnType("int")
                        .HasColumnName("thickness_floor");

                    b.Property<int>("ThicknessWall")
                        .HasColumnType("int")
                        .HasColumnName("thickness_wall");

                    b.Property<int>("TradeType")
                        .HasColumnType("int")
                        .HasColumnName("trade_type");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.Property<int>("UsersMax")
                        .HasColumnType("int")
                        .HasColumnName("users_max");

                    b.Property<int>("UsersNow")
                        .HasColumnType("int")
                        .HasColumnName("users_now");

                    b.Property<int>("WallHeight")
                        .HasColumnType("int")
                        .HasColumnName("wall_height");

                    b.HasKey("Id");

                    b.HasIndex("NavigatorCategoryEntityId");

                    b.HasIndex("PlayerEntityId");

                    b.HasIndex("RoomModelEntityId");

                    b.ToTable("rooms");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomEntryLogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomEntityId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId");

                    b.HasIndex("RoomEntityId");

                    b.ToTable("room_entry_logs");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomModelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<bool>("Custom")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("custom");

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("DoorRotation")
                        .HasColumnType("int")
                        .HasColumnName("door_rotation");

                    b.Property<int>("DoorX")
                        .HasColumnType("int")
                        .HasColumnName("door_x");

                    b.Property<int>("DoorY")
                        .HasColumnType("int")
                        .HasColumnName("door_y");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enabled");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("model");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("room_models");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomMuteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime>("DateExpires")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_expires");

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomEntityId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId");

                    b.HasIndex("RoomEntityId", "PlayerEntityId")
                        .IsUnique();

                    b.ToTable("room_mutes");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomRightEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<int>("RoomEntityId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId");

                    b.HasIndex("RoomEntityId", "PlayerEntityId")
                        .IsUnique();

                    b.ToTable("room_rights");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Security.SecurityTicketEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("DeletedAt"));

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ip_address");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_locked");

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int")
                        .HasColumnName("player_id");

                    b.Property<string>("Ticket")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ticket");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId")
                        .IsUnique();

                    b.HasIndex("Ticket")
                        .IsUnique();

                    b.ToTable("security_tickets");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Tracking.PerformanceLogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AverageFrameRate")
                        .HasColumnType("int")
                        .HasColumnName("average_frame_rate");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("browser");

                    b.Property<int>("ElapsedTime")
                        .HasColumnType("int")
                        .HasColumnName("elapsed_time");

                    b.Property<string>("FlashVersion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("flash_version");

                    b.Property<int>("GarbageCollections")
                        .HasColumnType("int")
                        .HasColumnName("garbage_collections");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ip_address");

                    b.Property<bool>("IsDebugger")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_debugger");

                    b.Property<int>("MemoryUsage")
                        .HasColumnType("int")
                        .HasColumnName("memory_usage");

                    b.Property<string>("OS")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("os");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_agent");

                    b.HasKey("Id");

                    b.HasIndex("ElapsedTime");

                    b.HasIndex("IPAddress");

                    b.ToTable("performance_logs");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Catalog.CatalogOfferEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Catalog.CatalogPageEntity", "Page")
                        .WithMany("Offers")
                        .HasForeignKey("CatalogPageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Catalog.CatalogPageEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Catalog.CatalogPageEntity", "ParentEntity")
                        .WithMany("Children")
                        .HasForeignKey("ParentEntityId");

                    b.Navigation("ParentEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Catalog.CatalogProductEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Catalog.CatalogOfferEntity", "Offer")
                        .WithMany("Products")
                        .HasForeignKey("CatalogOfferEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Furniture.FurnitureDefinitionEntity", "FurnitureDefinition")
                        .WithMany()
                        .HasForeignKey("FurnitureDefinitionEntityId");

                    b.Navigation("FurnitureDefinition");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Furniture.FurnitureEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Furniture.FurnitureDefinitionEntity", "FurnitureDefinitionEntity")
                        .WithMany("Furnitures")
                        .HasForeignKey("FurnitureDefinitionEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("Furniture")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Room.RoomEntity", "RoomEntity")
                        .WithMany()
                        .HasForeignKey("RoomEntityId");

                    b.Navigation("FurnitureDefinitionEntity");

                    b.Navigation("PlayerEntity");

                    b.Navigation("RoomEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Furniture.FurnitureTeleportLinkEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Furniture.FurnitureEntity", "FurnitureEntityOne")
                        .WithMany()
                        .HasForeignKey("FurnitureEntityOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Furniture.FurnitureEntity", "FurnitureEntityTwo")
                        .WithMany()
                        .HasForeignKey("FurnitureEntityTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FurnitureEntityOne");

                    b.Navigation("FurnitureEntityTwo");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Messenger.MessengerCategoryEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("MessengerCategories")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Messenger.MessengerFriendEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "FriendPlayerEntity")
                        .WithMany()
                        .HasForeignKey("FriendPlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Messenger.MessengerCategoryEntity", "MessengerCategoryEntity")
                        .WithMany()
                        .HasForeignKey("MessengerCategoryEntityId");

                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("MessengerFriends")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FriendPlayerEntity");

                    b.Navigation("MessengerCategoryEntity");

                    b.Navigation("PlayerEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Messenger.MessengerRequestEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("MessengerRequestsSent")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "RequestedPlayerEntity")
                        .WithMany("MessengerRequests")
                        .HasForeignKey("RequestedPlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerEntity");

                    b.Navigation("RequestedPlayerEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerBadgeEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("PlayerBadges")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerChatStyleOwnedEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerChatStyleEntity", "ChatStyle")
                        .WithMany("OwnedChatStyles")
                        .HasForeignKey("ChatStyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("PlayerOwnedChatStyles")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatStyle");

                    b.Navigation("PlayerEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerCurrencyEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("PlayerCurrencies")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerFavouriteRoomsEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Room.RoomEntity", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomBanEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("RoomBans")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Room.RoomEntity", "RoomEntity")
                        .WithMany("RoomBans")
                        .HasForeignKey("RoomEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerEntity");

                    b.Navigation("RoomEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomChatlogEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("RoomChatlogs")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Room.RoomEntity", "RoomEntity")
                        .WithMany("RoomChats")
                        .HasForeignKey("RoomEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "TargetPlayerEntity")
                        .WithMany()
                        .HasForeignKey("TargetPlayerEntityId");

                    b.Navigation("PlayerEntity");

                    b.Navigation("RoomEntity");

                    b.Navigation("TargetPlayerEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Navigator.NavigatorFlatCategoryEntity", "NavigatorFlatCategoryEntity")
                        .WithMany()
                        .HasForeignKey("NavigatorCategoryEntityId");

                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("Rooms")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Room.RoomModelEntity", "RoomModelEntity")
                        .WithMany()
                        .HasForeignKey("RoomModelEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NavigatorFlatCategoryEntity");

                    b.Navigation("PlayerEntity");

                    b.Navigation("RoomModelEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomEntryLogEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany()
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Room.RoomEntity", "RoomEntity")
                        .WithMany()
                        .HasForeignKey("RoomEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerEntity");

                    b.Navigation("RoomEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomMuteEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("RoomMutes")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Room.RoomEntity", "RoomEntity")
                        .WithMany("RoomMutes")
                        .HasForeignKey("RoomEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerEntity");

                    b.Navigation("RoomEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomRightEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("RoomRights")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo.Database.Entities.Room.RoomEntity", "RoomEntity")
                        .WithMany("RoomRights")
                        .HasForeignKey("RoomEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerEntity");

                    b.Navigation("RoomEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Security.SecurityTicketEntity", b =>
                {
                    b.HasOne("Turbo.Database.Entities.Players.PlayerEntity", "PlayerEntity")
                        .WithMany("SecurityTickets")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerEntity");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Catalog.CatalogOfferEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Catalog.CatalogPageEntity", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Offers");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Furniture.FurnitureDefinitionEntity", b =>
                {
                    b.Navigation("Furnitures");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerChatStyleEntity", b =>
                {
                    b.Navigation("OwnedChatStyles");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Players.PlayerEntity", b =>
                {
                    b.Navigation("Furniture");

                    b.Navigation("MessengerCategories");

                    b.Navigation("MessengerFriends");

                    b.Navigation("MessengerRequests");

                    b.Navigation("MessengerRequestsSent");

                    b.Navigation("PlayerBadges");

                    b.Navigation("PlayerCurrencies");

                    b.Navigation("PlayerOwnedChatStyles");

                    b.Navigation("RoomBans");

                    b.Navigation("RoomChatlogs");

                    b.Navigation("RoomMutes");

                    b.Navigation("RoomRights");

                    b.Navigation("Rooms");

                    b.Navigation("SecurityTickets");
                });

            modelBuilder.Entity("Turbo.Database.Entities.Room.RoomEntity", b =>
                {
                    b.Navigation("RoomBans");

                    b.Navigation("RoomChats");

                    b.Navigation("RoomMutes");

                    b.Navigation("RoomRights");
                });
#pragma warning restore 612, 618
        }
    }
}
